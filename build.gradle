import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'application'
    id 'edu.sc.seis.launch4j' version '3.0.6'
    id 'com.github.ben-manes.versions' version '0.51.0'
}

group = 'com.sergeybochkov'
version = '3.0.3'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories() {
    mavenCentral()
    maven {
        url "https://maven.sergeybochkov.com/releases"
    }
}

dependencies {
    implementation 'com.sb:bdev-rt:1.0.7.RELEASE'
    implementation 'cordelia:cordelia:5.4.0.RELEASE'
    implementation 'com.formdev:flatlaf:3.5.2'
    implementation 'com.formdev:flatlaf-extras:3.5.2'
    implementation 'com.formdev:flatlaf-fonts-inter:4.0'
    implementation 'org.slf4j:slf4j-api:2.0.15'
    implementation 'ch.qos.logback:logback-classic:1.5.12'
    implementation 'com.miglayout:miglayout-swing:11.4.2'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

application {
    mainClass = "com.sb.transmissionremote.TransmissionRemote"
    if (Os.isFamily(Os.FAMILY_MAC)) {
        applicationDefaultJvmArgs = [
                '-Xdock:name=Transmission Remote'
        ]
    }
}

task("macApp", dependsOn: 'build') {
    doLast {
        def outDir = "$buildDir/macApp" as File
        def appDir = "$outDir/Transmission Remote.app" as File
        delete outDir
        project.file(appDir).mkdirs()
        copy {
            from tarTree(distTar.archiveFile)
            into "$appDir/Contents/MacOS"
        }
        copy {
            from 'src/main/resources/style/transmission-remote.icns'
            into "$appDir/Contents/Resources"
        }
        copy {
            from 'src/main/resources/Info.plist'
            into "$appDir/Contents"
            filter { line -> line.replace('{{ root }}', distTar.getArchiveBaseName().get() + "-" + distTar.getArchiveVersion().get()) }
        }
        copy {
            from 'src/main/resources/PkgInfo'
            into "$appDir/Contents"
        }
    }
}

launch4j {
    mainClassName = 'com.sb.transmissionremote.TransmissionRemote'
    icon = "${projectDir}/src/main/resources/style/transmission-remote.ico"
}