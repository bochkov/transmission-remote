plugins {
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.7"
    id "org.beryx.jlink" version "2.10.2"
    id "com.jfrog.artifactory" version "4.9.5"
}

group = 'com.sergeybochkov'
version = '3.0'

apply plugin: "java"
apply plugin: "com.jfrog.artifactory"

sourceCompatibility = 12
targetCompatibility = 12

repositories() {
    jcenter()
}

javafx {
    version = "12"
    modules = ["javafx.controls", "javafx.fxml"]
}

mainClassName = "$moduleName/com.sergeybochkov.transmissionremote.TransmissionRemote"

dependencies {
    implementation('commons-io:commons-io:2.6')
    implementation('cordelia:cordelia:1.3.0.RELEASE') {
        exclude module: 'jcabi-log'
    }
    implementation('com.google.code.gson:gson:2.8.5')
    implementation('javax.xml.bind:jaxb-api:2.2.11')
    implementation('com.jcabi:jcabi-log:0.18')
    implementation('ch.qos.logback:logback-classic:1.3.0-alpha4')
    
    testCompile('junit:junit:4.12')
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"
    resolve {
        repository {
            repoKey = 'libs-release'
            maven = true
        }
    }
}

jlink {
    options = ["--strip-debug", "--compress", "2", "--no-header-files", "--no-man-pages", "--include-locales", "en,ru"]
    launcher {
        name = "transmissionremote"
    }
}

task("macApp", dependsOn: "jlink") {
    def outDir = "$buildDir/macApp"
    def appDir = "$outDir/Transmission Remote.app"
    delete outDir
    project.file(appDir).mkdirs()
    copy {
        from jlink.imageDir
        into "$appDir/Contents/MacOS"
    }
    copy {
        from 'src/main/resources/style/transmission-remote.icns'
        into "$appDir/Contents/Resources"
    }
    copy {
        from 'src/main/resources/Info.plist'
        into "$appDir/Contents"
    }
    copy {
        from 'src/main/resources/PkgInfo'
        into "$appDir/Contents"
    }
}