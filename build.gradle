plugins {
    id 'java'
    id 'application'
}

group = 'com.sergeybochkov'
version = '3.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories() {
    mavenCentral()
    maven {
        url "https://maven.sergeybochkov.com/releases"
    }
}

dependencies {
    implementation 'cordelia:cordelia:2.0.3.RELEASE'
    implementation 'com.formdev:flatlaf:3.0'
    implementation 'com.formdev:flatlaf-extras:3.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'ch.qos.logback:logback-classic:1.4.6'
    implementation 'com.miglayout:miglayout-core:11.0'
    implementation 'com.miglayout:miglayout-swing:11.0'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    
    testImplementation 'junit:junit:4.13.2'
}

application {
    mainClass = "com.sb.transmissionremote.TransmissionRemote"
    applicationDefaultJvmArgs = [
            '-Xdock:name=Transmission Remote'
    ]
}

task("macApp", dependsOn: 'build') {
    doLast {
        def outDir = "$buildDir/macApp" as File
        def appDir = "$outDir/Transmission Remote.app" as File
        delete outDir
        project.file(appDir).mkdirs()
        copy {
            from tarTree(distTar.archiveFile)
            into "$appDir/Contents/MacOS"
        }
        copy {
            from 'src/main/resources/style/transmission-remote.icns'
            into "$appDir/Contents/Resources"
        }
        copy {
            from 'src/main/resources/Info.plist'
            into "$appDir/Contents"
            filter { line -> line.replace('{{ root }}', distTar.getArchiveBaseName().get() + "-" + distTar.getArchiveVersion().get()) }
        }
        copy {
            from 'src/main/resources/PkgInfo'
            into "$appDir/Contents"
        }
    }
}